str(muestra2)
df <- muestra2
#install.packages("corrplot")
library(tidyverse)
library(dplyr)
library(ggplot)
library(readr)
library(corrplot)
peli <- read_csv("peli.csv")
View(peli)
### 1 Use las herramientas de dplyr para crear un nuevo data frame (df):
# Con las siguientes variables: nombre de la película, nombre del director,
# nombre primer actor, número de críticas positivas, duración, cantidad
# bruta recaudada, lenguaje, presupuesto, año, puntuación IMDB, likes de la
# película y género predominante.
# - Elimine del df todas las observaciones que tengan alguna casilla vacía.
# - Ordénelo por año, del más reciente al más antiguo.
data <-  data.frame(peli$Nombre_Pelicula,peli$Nombre_Director,peli$Nombre_Primer_Actor,peli$Criticas_Positivas,peli$Duracion,peli$Cantidad_Bruta_Recaudada,peli$Lenguaje,peli$Presupuesto,peli$Año,peli$Puntuacion_IMDB,peli$Likes_Pelicula,peli$Genero_Predominante)
str(data)
sapply(data, function(x) sum(is.na(x)))
datos <- na.omit(data)
sapply(datos, function(x) sum(is.na(x)))
view(datos)
Muestra <- datos %>%
dplyr::arrange(datos$peli.Año)
# Pregunta 2: Como interesa estudiar la puntuación de la película, debe
# transformar la variable Puntuacion_IMDB, ya que esta cuenta con un formato
# no numérico. Cree una variable llamada Puntuacion que tome solo la
# puntuación en formato numérico a partir de Puntuacion_IMDB. Elimine la
# variable Puntuacion_IMDB de su df.
# Finalmente, construya el objeto prom_puntuacion que contenga la
# puntuación promedio para cada tipo de género predominante.
str(Muestra)
#view(Muestra)
DOS <- Muestra %>%
dplyr::mutate(peli.Puntuacion_IMDB   = gsub(" , ", "", peli.Puntuacion_IMDB ),
peli.Puntuacion_IMDB   = gsub(" puntos", "", peli.Puntuacion_IMDB ),
Puntuacion = as.numeric(peli.Puntuacion_IMDB ))
muestra2 <- select (DOS,-peli.Puntuacion_IMDB)
str(muestra2)
ptt_promedio <- muestra2 %>%
dplyr::group_by(peli.Genero_Predominante ) %>%
dplyr::summarise(Puntuacion = round(mean(Puntuacion, na.rm = TRUE), 0))
DT::datatable(ptt_promedio)
########################################
# Pregunta 3: Use la librería ggplot2 para construir un gráfico de la
# distribución de la variable Puntuacion y un gráfico que permita comparar la
# distribución de la puntuación por género predominante. Comente.
ggplot(data = muestra2, aes(x = Puntuacion)) +
geom_histogram(bins = 50, alpha = 0.8, color = "white", fill = "turquoise") +
xlab("Puntuacion") +
ylab("Frecuencias") +
ggtitle("Distribución de Puntuacion") +
theme(plot.title = element_text(hjust = 0.5))
#la categoria mas heterogeneas a los datos documenary y  y las mas homoe4nea  thriller
ggplot(data = muestra2, aes(x = Puntuacion, y = peli.Genero_Predominante, fill = Puntuacion)) +
geom_boxplot() +
coord_flip()+
theme(legend.position="none")
ggplot(data = muestra2, aes(y = Puntuacion, fill = factor(peli.Genero_Predominante))) +
geom_boxplot(outlier.shape = NA)
##################################
# Pregunta 4: Analice de manera gráfica la correlación de Puntuacion con
tres = na.omit(muestra2[, -c(1,2,3,7,11)])
cor_tres = cor(tres)
cor_tres
corrplot(cor_tres)
# el resto de las variables cuantitativas. Además, analice a través de una
# matriz gráfica, la dispersión y distribución de las variables. Comente.
str(muestra2)
g2 <- ggplot(data = viv, aes(x = longitud, y = latitud,  col = prox_oceano))
g2 + geom_point()
str(muestra2)
modelo <- step(lm(Puntuacion ~peli.Duracion +peli.Criticas_Positivas peli.Genero_Predominante, data = df), direction = "both")
summary(modelo)
df <- muestra2
modelo <- step(lm(Puntuacion ~peli.Duracion +peli.Criticas_Positivas peli.Genero_Predominante, data = df), direction = "both")
modelo <- step(lm(Puntuacion ~peli.Duracion +peli.Criticas_Positivas+peli.Genero_Predominante, data = df), direction = "both")
summary(modelo)
install.packages("lmtest")
library(lmtest)
bptest(modelo)
dwtest(modelo)
shapiro.test(modelo)
nortest::lillie.test(modelo)
install.packages("nortest")
library(nortest)
nortest::lillie.test(modelo)
bptest(modelo)
dwtest(modelo)
summary(modelo)
knitr::kable(search_("Leonardo DiCaprio"))
str(muestra2)
search_ <- function(palabra) {
indice <- grep(palabra, muestra2$peli.Nombre_Primer_Actor)
tabla <- data %>%
dplyr::slice(indice) %>%
dplyr::count(Clasificacion2) %>%
dplyr::rename(Clasificacion = Clasificacion2,
Numero = n)
return(tabla)
}
knitr::kable(search_("Leonardo DiCaprio"))
search_ <- function(palabra) {
indice <- grep(palabra, muestra2$peli.Nombre_Primer_Actor)
tabla <- data %>%
dplyr::slice(indice) %>%
dplyr::count(peli.Genero_Predominante   ) %>%
dplyr::rename(Clasificacion = peli.Genero_Predominante   ,
Numero = n)
return(tabla)
}
knitr::kable(search_("Leonardo DiCaprio"))
g1 <- ggplot(data = tabla, aes(x = Numero)) +
geom_histogram(bins = 30, color = "white", fill = "turquoise") +
xlab("Valoración") + ylab("Frecuencias") +
ggtitle(paste("Distribución de Valoración de la Categoría", peli.Genero_Predominante)) +
theme(plot.title = element_text(hjust = 0.5))
tabla <- data %>%
dplyr::slice(indice) %>%
dplyr::count(peli.Genero_Predominante   ) %>%
dplyr::rename(Clasificacion = peli.Genero_Predominante   ,
Numero = n)
g1 <- ggplot(data = tabla, aes(x = Numero)) +
geom_histogram(bins = 30, color = "white", fill = "turquoise") +
xlab("Valoración") + ylab("Frecuencias") +
ggtitle(paste("Distribución de Valoración de la Categoría", peli.Genero_Predominante)) +
theme(plot.title = element_text(hjust = 0.5))
search_ <- function(palabra) {
indice <- grep(palabra, muestra2$peli.Nombre_Primer_Actor)
tabla <- data %>%
dplyr::slice(indice) %>%
dplyr::count(peli.Genero_Predominante   ) %>%
dplyr::rename(Clasificacion = peli.Genero_Predominante   ,
Numero = n)
}
knitr::kable(search_("Leonardo DiCaprio"))
tabla <- data %>%
dplyr::slice(indice) %>%
dplyr::count(peli.Genero_Predominante   ) %>%
dplyr::rename(Clasificacion = peli.Genero_Predominante   ,
Numero = n)
str(tabla)
indice <- grep(palabra, muestra2$peli.Nombre_Primer_Actor)
tabla <- data %>%
dplyr::slice(indice) %>%
dplyr::count(peli.Genero_Predominante   ) %>%
dplyr::rename(Clasificacion = peli.Genero_Predominante   ,
Numero = n)
str(tabla)
search_ <- function(palabra) {
indice <- grep(palabra, muestra2$peli.Nombre_Primer_Actor)
tabla <- data %>%
dplyr::slice(indice) %>%
dplyr::count(peli.Genero_Predominante   ) %>%
dplyr::rename(Clasificacion = peli.Genero_Predominante   ,
Numero = n)
str(tabla)
}
knitr::kable(search_("Leonardo DiCaprio"))
search_ <- function(palabra) {
indice <- grep(palabra, muestra2$peli.Nombre_Primer_Actor)
tabla <- data %>%
dplyr::slice(indice) %>%
dplyr::count(peli.Genero_Predominante   ) %>%
dplyr::rename(Clasificacion = peli.Genero_Predominante   ,
Numero = n)
str(tabla)
g1 <- ggplot(data = tabla, aes(x = Numero )) +
geom_histogram(bins = 30, color = "white", fill = "turquoise") +
xlab("Valoración") + ylab("Frecuencias") +
ggtitle(paste("Distribución de Valoración de la Categoría", Clasificacion)) +
theme(plot.title = element_text(hjust = 0.5))
}
knitr::kable(search_("Leonardo DiCaprio"))
search_ <- function(palabra) {
indice <- grep(palabra, muestra2$peli.Nombre_Primer_Actor)
tabla <- data %>%
dplyr::slice(indice) %>%
dplyr::count(peli.Genero_Predominante   ) %>%
dplyr::rename(Clasificacion = peli.Genero_Predominante   ,
Numero = n)
str(tabla)
g1 <- ggplot(data = tabla, aes(x = tabla$Numero )) +
geom_histogram(bins = 30, color = "white", fill = "turquoise") +
xlab("Valoración") + ylab("Frecuencias") +
ggtitle(paste("Distribución de Valoración de la Categoría", tabla$Clasificacion)) +
theme(plot.title = element_text(hjust = 0.5))
}
knitr::kable(search_("Leonardo DiCaprio"))
str(muestra2)
search_ <- function(palabra) {
indice <- grep(palabra, muestra2$peli.Nombre_Primer_Actor)
tabla <- data %>%
dplyr::slice(indice) %>%
dplyr::count(peli.Genero_Predominante   ) %>%
dplyr::rename(Clasificacion = peli.Genero_Predominante   ,
Numero = n)
str(tabla)
g1 <- ggplot(data = tabla, aes(x = tabla$Numero )) +
geom_histogram(bins = 30, color = "white", fill = "turquoise") +
xlab("Valoración") + ylab("Frecuencias") +
ggtitle(paste("Distribución de Valoración de la Categoría", tabla$Clasificacion)) +
theme(plot.title = element_text(hjust = 0.5))
print(g1)
return(tabla)
}
knitr::kable(search_("Leonardo DiCaprio"))
str(muestra2)
search_ <- function(palabra) {
indice <- grep(palabra, muestra2$peli.Nombre_Primer_Actor)
tabla <- data %>%
dplyr::slice(indice) %>%
dplyr::count(peli.Genero_Predominante   ) %>%
dplyr::rename(Clasificacion = peli.Genero_Predominante   ,
Numero = n)
str(tabla)
g1 <- ggplot(data = tabla, aes(x = tabla$Numero )) +
geom_histogram(bins = 30, color = "white", fill = "turquoise") +
xlab("géneros donde participa") + ylab("cantidad de películas") +
ggtitle(paste("frecuencia  de la géneros", tabla$Clasificacion)) +
theme(plot.title = element_text(hjust = 0.5))
print(g1)
return(tabla)
}
knitr::kable(search_("Leonardo DiCaprio"))
str(muestra2)
search_ <- function(palabra) {
indice <- grep(palabra, muestra2$peli.Nombre_Primer_Actor)
tabla <- data %>%
dplyr::slice(indice) %>%
dplyr::count(peli.Genero_Predominante   ) %>%
dplyr::rename(Clasificacion = peli.Genero_Predominante   ,
Numero = n)
#tabla$Numero ,tabla$Clasificacion
str(tabla)
g1 <-ggplot(data, aes(x = tabla$Numero, fill = tabla$Clasificacion)) +
geom_bar() +
coord_flip() +
theme(legend.position = "none") +
ylab("Cuenta") +
xlab("Clasificación") +
ggtitle("Distribución de Clasificación") +
theme(plot.title = element_text(hjust = 0.5))
print(g1)
return(tabla)
}
knitr::kable(search_("Leonardo DiCaprio"))
search_ <- function(palabra) {
indice <- grep(palabra, muestra2$peli.Nombre_Primer_Actor)
tabla <- data %>%
dplyr::slice(indice) %>%
dplyr::count(peli.Genero_Predominante   ) %>%
dplyr::rename(Clasificacion = peli.Genero_Predominante   ,
Numero = n)
#tabla$Numero ,tabla$Clasificacion
str(tabla)
g1 <-ggplot(data, aes(x = tabla$Numero, fill = tabla$Clasificacion)) +
geom_bar() +
coord_flip() +
theme(legend.position = "none") +
ylab("Cuenta") +
xlab("Clasificación") +
ggtitle("Distribución de Clasificación") +
theme(plot.title = element_text(hjust = 0.5))
print(g1)
return(tabla)
}
knitr::kable(search_("Leonardo DiCaprio"))
search_ <- function(palabra) {
indice <- grep(palabra, muestra2$peli.Nombre_Primer_Actor)
tabla <- data %>%
dplyr::slice(indice) %>%
dplyr::count(peli.Genero_Predominante   ) %>%
dplyr::rename(Clasificacion = peli.Genero_Predominante   ,
Numero = n)
#tabla$Numero ,tabla$Clasificacion
str(tabla)
g1 <-ggplot(tabla, aes(x = tabla$Numero, fill = tabla$Clasificacion)) +
geom_bar() +
coord_flip() +
theme(legend.position = "none") +
ylab("Cuenta") +
xlab("Clasificación") +
ggtitle("Distribución de Clasificación") +
theme(plot.title = element_text(hjust = 0.5))
print(g1)
return(tabla)
}
knitr::kable(search_("Leonardo DiCaprio"))
search_ <- function(palabra) {
indice <- grep(palabra, muestra2$peli.Nombre_Primer_Actor)
tabla <- data %>%
dplyr::slice(indice) %>%
dplyr::count(peli.Genero_Predominante   ) %>%
dplyr::rename(Clasificacion = peli.Genero_Predominante   ,
Numero = n)
#tabla$Numero ,tabla$Clasificacion
str(tabla)
g1 <- ggplot(data = tabla, aes(x = tabla$Numero )) +
geom_histogram(bins = 30, color = "white", fill = "turquoise") +
xlab("géneros donde participa") + ylab("cantidad de películas") +
ggtitle(paste("frecuencia  de la géneros", tabla$Clasificacion)) +
theme(plot.title = element_text(hjust = 0.5))
print(g1)
return(tabla)
}
knitr::kable(search_("Leonardo DiCaprio"))
search_ <- function(palabra) {
indice <- grep(palabra, muestra2$peli.Nombre_Primer_Actor)
tabla <- data %>%
dplyr::slice(indice) %>%
dplyr::count(peli.Genero_Predominante   ) %>%
dplyr::rename(Clasificacion = peli.Genero_Predominante   ,
Numero = n)
#tabla$Numero ,tabla$Clasificacion
str(tabla)
g1 <- ggplot(data = tabla, aes(x = tabla$Numero ) , fill = tabla$Clasificacion) ) +
geom_histogram(bins = 30, color = "white", fill = "turquoise") +
xlab("géneros donde participa") + ylab("cantidad de películas") +
ggtitle(paste("frecuencia  de la géneros", tabla$Clasificacion)) +
theme(plot.title = element_text(hjust = 0.5))
print(g1)
return(tabla)
}
knitr::kable(search_("Leonardo DiCaprio"))
search_ <- function(palabra) {
indice <- grep(palabra, muestra2$peli.Nombre_Primer_Actor)
tabla <- data %>%
dplyr::slice(indice) %>%
dplyr::count(peli.Genero_Predominante   ) %>%
dplyr::rename(Clasificacion = peli.Genero_Predominante   ,
Numero = n)
#tabla$Numero ,tabla$Clasificacion
str(tabla)
g1 <- ggplot(data = tabla, aes(x = tabla$Numero ) , fill = tabla$Clasificacion ) +
geom_histogram(bins = 30, color = "white", fill = "turquoise") +
xlab("géneros donde participa") + ylab("cantidad de películas") +
ggtitle(paste("frecuencia  de la géneros", tabla$Clasificacion)) +
theme(plot.title = element_text(hjust = 0.5))
print(g1)
return(tabla)
}
knitr::kable(search_("Leonardo DiCaprio"))
str(muestra2)
search_ <- function(palabra) {
indice <- grep(palabra, muestra2$peli.Nombre_Primer_Actor)
tabla <- data %>%
dplyr::slice(indice) %>%
dplyr::count(peli.Genero_Predominante   ) %>%
dplyr::rename(Clasificacion = peli.Genero_Predominante   ,
Numero = n)
#tabla$Numero ,tabla$Clasificacion
str(tabla)
g1 <- ggplot(data = tabla, aes(x = tabla$Numero ) ) +
geom_histogram(bins = 30, color = "white", fill = "turquoise") +
xlab("géneros donde participa") + ylab("cantidad de películas") +
ggtitle(paste("frecuencia  de la géneros", tabla$Clasificacion)) +
theme(plot.title = element_text(hjust = 0.5))
print(g1)
return(tabla)
}
knitr::kable(search_("Leonardo DiCaprio"))
search_ <- function(palabra) {
indice <- grep(palabra, muestra2$peli.Nombre_Primer_Actor)
tabla <- data %>%
dplyr::slice(indice) %>%
dplyr::count(peli.Genero_Predominante   ) %>%
dplyr::rename(Clasificacion = peli.Genero_Predominante   ,
Numero = n)
#tabla$Numero ,tabla$Clasificacion
str(tabla)
g1 <- ggplot(data = tabla, aes(x = tabla$`Numero` ) ) +
geom_histogram(bins = 30, color = "white", fill = "turquoise") +
xlab("géneros donde participa") + ylab("cantidad de películas") +
ggtitle(paste("frecuencia  de la géneros", tabla$Clasificacion)) +
theme(plot.title = element_text(hjust = 0.5))
print(g1)
return(tabla)
}
knitr::kable(search_("Leonardo DiCaprio"))
search_ <- function(palabra) {
indice <- grep(palabra, muestra2$peli.Nombre_Primer_Actor)
tabla <- data %>%
dplyr::slice(indice) %>%
dplyr::count(peli.Genero_Predominante   ) %>%
dplyr::rename(Clasificacion = peli.Genero_Predominante   ,
Numero = n)
#tabla$Numero ,tabla$Clasificacion
str(tabla)
g1 <- ggplot(data = tabla, aes(x = Numero ) ) +
geom_histogram(bins = 30, color = "white", fill = "turquoise") +
xlab("géneros donde participa") + ylab("cantidad de películas") +
ggtitle(paste("frecuencia  de la géneros", Clasificacion)) +
theme(plot.title = element_text(hjust = 0.5))
print(g1)
return(tabla)
}
knitr::kable(search_("Leonardo DiCaprio"))
library(tidyverse)
library(dplyr)
library(ggplot)
install.packages("ggplot")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(ggplot)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(ggplot)
library(ggplot2)
data <-  data.frame(peli$Nombre_Pelicula,peli$Nombre_Director,peli$Nombre_Primer_Actor,peli$Criticas_Positivas,peli$Duracion,peli$Cantidad_Bruta_Recaudada,peli$Lenguaje,peli$Presupuesto,peli$Año,peli$Puntuacion_IMDB,peli$Likes_Pelicula,peli$Genero_Predominante)
str(data)
sapply(data, function(x) sum(is.na(x)))
datos <- na.omit(data)
sapply(datos, function(x) sum(is.na(x)))
view(datos)
Muestra <- datos %>%
dplyr::arrange(datos$peli.Año)
Muestra <- datos %>%
dplyr::arrange(datos$peli.Año)
Muestra
tres = na.omit(muestra2[, -c(1,2,3,7,11)])
cor_tres = cor(tres)
cor_tres
corrplot(cor_tres)
# el resto de las variables cuantitativas. Además, analice a través de una
# matriz gráfica, la dispersión y distribución de las variables. Comente.
str(muestra2)
g2 <- ggplot2(data = viv, aes(x = longitud, y = latitud,  col = prox_oceano))
library(ggplot)
install.packages("ggplot")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
#install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(readr)
library(corrplot)
library(lmtest)
library(nortest)
library(ggplot2)
shapiro.test(modelo)
install.packages("GGally")
ggpairs(muestra2,
lower = list(continuous = "smooth"),
diag = list(continuous = "barDiag"),
axisLabels = "none")
ggpairs(tres,
lower = list(continuous = "smooth"),
diag = list(continuous = "barDiag"),
axisLabels = "none")
library(GGally)
install.packages("GGally")
install.packages("GGally")
library(GGally)
cor_tres
ggpairs(cor_tres,
lower = list(continuous = "smooth"),
diag = list(continuous = "barDiag"),
axisLabels = "none")
ggpairs(cor_tres,
axisLabels = "none")
ggpairs(tres,
axisLabels = "none")
